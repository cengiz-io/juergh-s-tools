#!/bin/bash -eu

function out()
{
	local rc=$?

	trap - INT EXIT TERM HUP

	if [ "${rc}" -ne 0 ] ; then
		echo "Error: Script failed" >&2
	fi

	exit "${rc}"
}

function usage()
{
	cat <<EOF
Usage: create-testbuild-commit [-h] [SUFFIX]

Create a 'closing' commit for a test build.

Positional arguments:
  SUFFIX      The suffix to append to the current package version. if not
              provided, the default is: '+<date>.<git_hash>'.

Optional arguments:
  -h, --help  Show this help text and exit.
EOF
}

suffix=
while [ $# -gt 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		*)
			if [ -z "${suffix}" ] ; then
				suffix=${1#+}
			else
				echo "Invalid argument: ${1}"
				exit 2
			fi
			;;
	esac
	shift
done

trap out EXIT INT TERM HUP

DEBIAN=debian
if [ -e debian/debian.env ] ; then
	# shellcheck disable=SC1091
	. debian/debian.env
fi
changelog=${DEBIAN}/changelog

# Check the release name
distro=$(dpkg-parsechangelog -l "${changelog}" -S Distribution)
if [ "${distro}" = "UNKNOWN" ] ; then
	echo "Distribution is UNKNOWN"
	exit 1
fi

# Generate the version suffix
if [ -z "${suffix}" ] ; then
	suffix=$(date +%Y%m%d).git$(git log --abbrev=8 --format=%h -1)
fi

# Strip '-' from the version suffix as it confused the debian build rules
suffix=${suffix//-/}

# Generate the test version
version=$(dpkg-parsechangelog -l "${changelog}" -S Version)
test_version="${version}+${suffix}"

# Checkout a test branch
git checkout -b testbuild-"${suffix}"

# Update the changelog
tmp=$(mktemp)
last=$(git log --format=%h -1 -- "${changelog}")
{
	head -1 "${changelog}"
	echo
	echo "  * Test Build ${test_version}"
	git log --format='    - %s' "${last}.."
	tail -n +2 "${changelog}"
} > "${tmp}"
mv "${tmp}" "${changelog}"

# Create a commit with the updated test version
sed -i "1 s,${version},${test_version}," "${changelog}"
git commit -s -m "UBUNTU: Test Build ${test_version}" -- "${changelog}"

echo "Original version: ${version}"
echo "Test version:     ${test_version}"
