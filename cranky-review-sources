#!/bin/bash -eu

function do_colordiff()
{
	local line color

	while IFS= read -r line ; do
		color="\e[0m"  # no color
		case "${line}" in
			"-"*)           color="\e[31m"      ;;  # red
			"+"*)           color="\e[32m"      ;;  # green
			"!"*)           color="\e[33m"      ;;  # brown
			"@@"*)          color="\e[36m"      ;;  # cyan
			"diff --git "*) color="\e[1m\e[36m" ;;  # bold cyan
		esac
		echo -ne "${color}"
		echo -n "${line}"
		echo -e "\e[0m"
	done
}

function out()
{
	local rc=${?}

	trap - EXIT

	if [ -d "${TMPD}" ] ; then
		rm -rf "${TMPD}"
	fi

	if [ "${rc}" -ne 0 ] ; then
		echo "Script failed" >&2
	fi

	exit "${rc}"
}

function review_src()
{
	local src_dir=$1
	local cwd DEBIAN src version debdiff changes prev_version prev_dsc

	cwd=${PWD}

	cd "${src_dir}" || exit 1

	DEBIAN=debian
	# shellcheck disable=SC1091
	if [ -e debian/debian.env ] ; then
		. debian/debian.env
	fi

	src=$(dpkg-parsechangelog -l "${DEBIAN}"/changelog -S Source)
	version=$(dpkg-parsechangelog -l "${DEBIAN}"/changelog -S Version)
	debdiff=${src}_${version}.debdiff
	changes=${src}_${version}_source.changes

	if ! [ -f ../"${changes}" ] ; then
		echo "No .changes file found: ${changes}" >&2
		return
	fi

	if [ "${FORCE}" -eq 1 ] ; then
		rm -f ../"${debdiff}"
	fi

	# Create the debdiff if it doesn't exist
	if ! [ -e ../"${debdiff}" ] ; then
		if [ -z "${TMPD}" ] ; then
			TMPD=$(mktemp -d)
		fi

		# Figure out the previous package version
		if [ "${#PREVIOUS[@]}" -eq 0 ] ; then
			prev_version=$(dpkg-parsechangelog -l "${DEBIAN}"/changelog \
											   -S Version -o 1 -c 1)
		else
			prev_version=${PREVIOUS[${src}]}
		fi

		prev_dsc="${src}"_"${prev_version}".dsc
		if ! [ -e ../"${prev_dsc}" ] ; then
			echo "No previous .dsc found: ${prev_dsc}" >&2
			return
		fi

		echo
		echo -e "\e[96m*** ${src} [0/3]: Diffing against ${prev_dsc} ***\e[0m"
		echo

		# Populate TMPD with symlinks to the previous package files
		( cd "${TMPD}" && dcmd "${cwd}"/../"${prev_dsc}" | \
			while read -r f ; do ln -sf "${f}" . ; done )

		# Finally call cranky review against TMPD
		( cd ../ && cranky review -p "${TMPD}" "${changes}" )
	fi

	# Bail out if the debdiff doesn't exists
	if ! [ -e ../"${debdiff}" ] ; then
		echo "No .debdiff file found: ${debdiff}" >&2
		return
	fi

	# lsdiff .debdiff
	echo
	echo -e "\e[96m*** ${src} [1/3]: lsdiff ${debdiff} ***\e[0m"
	echo
	lsdiff -s ../"${debdiff}" | do_colordiff

	# filterdiff .debdiff
	echo
	echo -e "\e[96m*** ${src} [2/3]: filterdiff ${debdiff} ***\e[0m"
	echo
	filterdiff -x '*/abi/*' "../${debdiff}" | do_colordiff

	# Content of .changes
	echo
	echo -e "\e[96m*** ${src} [3/3]: cat ${changes} ***\e[0m"
	echo
	cat ../"${changes}"

	cd "${cwd}"
}

function usage()
{
	cat <<EOF
Usage: cranky review-sources [-f] [-h] POCKET

Review the differences between the current kernel source packages and the
previous source packages from pocket <POCKET>.

Positional arguments:
  POCKET       The name of the pocket that contains the previous kernel
               packages to compare against. If set to 'none', uses the version
               from the previous changelog entry.

Optional arguments:
  -f, --force  Force the recreation of the .debdiff files.
  -h, --help   Show this help message and exit.
EOF
}

FORCE=0
pocket=

while [ ${#} -gt 0 ] ; do
	case "${1}" in
		-f|--force)
			FORCE=1
			;;
		-h|--help)
			usage
			exit
			;;
		release|security|updates|proposed|none)
			if [ -z "${pocket}" ] ; then
				pocket=${1}
			else
				echo "Invalid argument: ${1}" >&2
				exit 2
			fi
			;;
		*)
			echo "Invalid argument: ${1}" >&2
			exit 2
			;;
	esac
	shift
done

if [ -z "${pocket}" ] ; then
	usage
	exit 2
fi

TMPD=
trap out EXIT

readarray -t srcs < <(cranky shell-helper source-packages-path)
if [ "${#srcs[@]}" -eq 0 ] ; then
	exit 1
fi

declare -A PREVIOUS=()
# Get the previous versions from the provided pocket
if [ "${pocket}" != "none" ] ; then
	while read -r src version rest ; do
		PREVIOUS[${src}]=${version}
	done < <(cranky rmadison -s -p "${pocket}")
fi

for src in "${srcs[@]}" ; do
	review_src "${src}"
done
