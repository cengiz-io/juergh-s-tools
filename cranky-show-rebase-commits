#!/bin/bash -eu
#
# Show the commits introduced by the previous rebase
#

function usage()
{
	cat <<EOF
Usage: cranky-show-rebase-commits [-h] [OPTS] [-- PATH]

Show the commits introduced by the most recent rebase.

Positional arguments:
  OPTS        Additional options for 'git log'.
  PATH        Show only commits that touch the provided PATH.

Optional arguments:
  -h, --help  Show this help text and exit.
EOF
}

opts=()
paths=()

while [ $# -gt 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		--)
			shift
			paths=("--" "${@}")
			break
			;;
		*)
			opts+=("${1}")
			;;
	esac
	shift
done

# The current master version
curr=$(dpkg-parsechangelog -l debian.master/changelog -S Version)

# Find the previous master version
. debian/debian.env
prev=
for offset in $(seq 0 9) ; do
	prev=$(dpkg-parsechangelog -l "${DEBIAN}"/changelog -o "${offset}" -c 1 | \
			   grep -m1 -P '^   \[ Ubuntu: \d+' || true)
	prev=${prev#* Ubuntu: }
	prev=${prev%% *}
	if [ -n "${prev}" ] && [ "${prev}" != "${curr}" ] ; then
		break
	fi
done
if [ -z "${prev}" ] ; then
	echo "Failed to find previous master version" >&2
	exit 1
fi

curr_commit=$(git log --oneline | \
				  grep -m1 -P "^[0-9a-f]{8,} UBUNTU: Ubuntu-${curr}$" | \
				  awk '{ print $1 }')
prev_commit=$(git log --oneline | \
				  grep -m1 -P "^[0-9a-f]{8,} UBUNTU: Ubuntu-${prev}$" | \
				  awk '{ print $1 }')

git log "${opts[@]}" "${prev_commit}".."${curr_commit}" "${paths[@]}"
