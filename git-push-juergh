#!/bin/bash -eu
#
# Push a branch to juergh's LP linux repo
#

function usage()
{
	cat <<EOF
Usage: $(basename "${0}") [-d] [-f] [-h] [BRANCH]

Push the provided (or current branch) to juergh's LP linux repo.

Optional arguments:
  -d, --dry-run  Do a dry-run.
  -f, --force    Do a --force-with-lease push. Provide it twice to do a
                 --force push.
  -h, --help     Show this help text and exit.
EOF
}

if ! [ -d debian ] ; then
	echo "Doesn't look like a Debian repo" >&2
	exit 1
fi

dry_run=0
force=0
branch=

while [ ${#} -gt 0 ] ; do
	case "${1}" in
		-d|--dry-run)
			dry_run=1
			;;
		-f|--force)
			force=$((force + 1))
			;;
		-h|--help)
			usage
			exit
			;;
		*)
			if [ -z "${branch}" ] ; then
				branch=${1}
			else
				echo "Invalid argument: ${1}" >&2
				exit 2
			fi
			;;
	esac
	shift
done

if [ -z "${branch}" ] ; then
	branch=$(git rev-parse --abbrev-ref HEAD)
	if [ -z "${branch}" ] ; then
		echo "Unable to determine current branch name" >&2
		exit 1
	fi
fi

opts=()
if [ ${force} -eq 1 ] ; then
	opts+=("--force-with-lease")
elif [ ${force} -eq 2 ] ; then
	opts+=("--force")
fi

# TODO: switch to branch to determine the below

changelog=debian/changelog
if [ -e debian/debian.env ] ; then
	# shellcheck disable=SC1091
	. debian/debian.env
	changelog=${DEBIAN}/changelog
fi

# Source package name and release/series
release=$(dpkg-parsechangelog -l "${changelog}" -S Distribution)
if [ "${release}" = "UNRELEASED" ]; then
	release=$(dpkg-parsechangelog -l "${changelog}" -S Distribution -o 1 -c 1)
fi
package=$(dpkg-parsechangelog -l "${changelog}" -S Source)

# Remote name and branch
remote_name=${package}
remote_branch=${release}/${branch}

# Kernel packages are special
case "${package}" in
	linux-meta-unstable|linux-unstable)
		release="unstable"
		;;
esac
case "${package}" in
	linux-firmware)
		;;
	linux-meta*)
		remote_name=linux-meta
		remote_branch=${release}/${package}/${branch}
		;;
	linux*)
		remote_name=linux
		remote_branch=${release}/${package}/${branch}
		;;
esac

remote_url="git+ssh://git.launchpad.net/~juergh/+git/${remote_name}"

#remote_url=$(git remote get-url juergh 2>/dev/null || true)
#if [ -z "${remote_url}" ] ; then
#	remote_url="git+ssh://git.launchpad.net/~juergh/+git/${remote_name}"
#	git remote add juergh "${remote_url}"
#fi

echo "Remote URL: ${remote_url}"
echo "Release:    ${release}"
echo "Source:     ${package}"
echo "Branch:     ${branch}"
echo
echo "git push ${opts[*]} ${remote_url} ${branch}:${remote_branch}"

if [ ${dry_run} -eq 1 ] ; then
	echo
	echo "Dry-run, exiting..."
	exit
fi

git push "${opts[@]}" "${remote_url}" "${branch}":"${remote_branch}"
