#!/bin/bash -eu
#
# Pick debian* changes from a git commit
#

function debian_pick()
{
	local commit=${1}
	local dirs trailer

	# List of debian directories
	readarray -t dirs < <(git ls-tree --name-only "${commit}" | \
							  grep ^debian || true)

	if [ ${#dirs[@]} -eq 0 ] ; then
		# No debian* dirs
		return
	fi

	if [ -n "$(git status --porcelain -- "${dirs[@]}")" ] ; then
		echo "Repo is unlcean" >&2
		exit 1
	fi

	if [ -z "$(git diff "${commit}"~1.."${commit}" -- "${dirs[@]}")" ] ; then
		# No debian* changes
		return
	fi

	# Apply and commit the changes
	git diff "${commit}"~1.."${commit}" -- "${dirs[@]}" | git apply -
	git add -f "${dirs[@]}"
	git commit -C "${commit}"

	# Ammend the commit message
	trailer=()
	if [ "${CHERRYPICK}" -eq 1 ] ; then
		trailer+=("(cherry picked debian* changes from commit $(git rev-parse "${commit}"))")
	fi
	if [ "${SIGNOFF}" -eq 1 ] ; then
		trailer+=("Signed-off-by: $(git config --get user.name) <$(git config --get user.email)>")
	fi
	if [ ${#trailer[@]} -ne 0 ] ; then
		git commit --amend --message="$(git log --format=%B "${commit}" -1)
$(printf "\n%s" "${trailer[@]}")"
	fi
}

function usage()
{
	cat <<EOF
Usage: $(basename "${0}") [-h] [-s] [-x] COMMIT...

Pick debian* changes from the provided COMMIT(s). Just like 'git cherry-pick'
but only pickes changes to debian* files.

Optional arguments:
  -h, --help     Show this help text and exit.
  -s, --signoff  Add a Signed-off-by line to the commit message.
  -x             Add a '(picked ... from commit <COMMIT>)' line to the commit
                 message.
EOF
}

SIGNOFF=0
CHERRYPICK=0

while [ ${#} -ne 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		-s|--signoff)
			SIGNOFF=1
			;;
		-x)
			CHERRYPICK=1
			;;
		*)
			break
			;;
	esac
	shift
done

for arg in "${@}" ; do
	debian_pick "${arg}"
done
