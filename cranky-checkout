#!/bin/bash -eu

function usage()
{
	cat <<EOF
Usage: $(basename "${0}") [-d] [-h] [-r] [-u] [handle]

Check out Ubuntu kernel repos.

Optional arguments:
  -d, --dry-run  Do a dry run.
  -h, --help     Show this help text and exit.
  -r, --rebase   Rebase onto the latest tag if HEAD is untagged (implies
                 --update).
  -u, --update   Update the local branch to the latest tag.
EOF
}

run=()
rebase=0
update=0
handle=

while [ ${#} -gt 0 ] ; do
	case "${1}" in
		-d|--dry-run)
			run=("echo" "[dry-run]")
			;;
		-h|--help)
			usage
			exit
			;;
		-r|--rebase)
			rebase=1
			;;
		-u|--update)
			update=1
			;;
		*)
			if [ -n "${handle}" ] ; then
				echo "Invalid argument: ${1}" >&2
				exit 2
			fi
			handle=${1}
			;;
	esac
	shift
done

if [ -z "${handle}" ] ; then
	if ! [ -d debian ] ; then
		echo "No handle provided and not an Ubuntu kernel repo" >&1
		exit 1
	fi

	DEBIAN=
	if [ -e debian/debian.env ] ; then
		# shellcheck disable=SC1091
		. debian/debian.env
	fi
	series=$(dpkg-parsechangelog -l"${DEBIAN}"/changelog -SDistribution)
	package=$(dpkg-parsechangelog -l"${DEBIAN}"/changelog -SSource)
	handle=${series}:${package}
fi

"${run[@]}" cranky checkout "${handle}"

if [ "${update}" -eq 0 ] ; then
	exit
fi

while IFS= read -r path ; do
	(
		echo
		echo "${path}"
		cd "${path}"

        tag=$(git describe --exact-match HEAD 2>/dev/null || true)
		if [ -n "${tag}" ] ; then
			echo "HEAD tag:   ${tag}"
			rebase_tag=
		else
			echo "HEAD is untagged"
			if [ ${rebase} -eq 0 ] ; then
				exit
			fi
			while IFS= read -r commit ; do
				tag=$(git describe --exact-match "${commit}" 2>/dev/null || \
						  true)
				if [ -n "${tag}" ] ; then
					break
				fi
			done < <(git log --format=%h)
			echo "Branch tag: ${tag}"
			rebase_tag=${tag}
		fi

		base_tag=$(echo "${tag}" | grep -oP '^.*?-\d+\.\d+\.\d+')
		latest_tag=$(git tag | grep -F "${base_tag}" | sort -V | tail -1)
		if [ -z "${latest_tag}" ] ; then
			echo "Failed to determine latest tag" >&2
			exit
		fi
		echo "Latest tag: ${latest_tag}"

		if [ "${tag}" != "${latest_tag}" ] ; then
			# Update the current branch to the latest tag
			if [ -e debian/debian.env ] ; then
				if [ -n "${rebase_tag}" ] ; then
					"${run[@]}" git rebase --onto "${latest_tag}" "${rebase_tag}"
				else
					"${run[@]}" git reset --hard "${latest_tag}"
				fi
			else
				"${run[@]}" git merge --ff-only "${latest_tag}"
			fi
		fi
	)
done < <(cranky shell-helper source-packages-path "${handle}")
