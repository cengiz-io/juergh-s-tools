#!/bin/bash -eu
#
# Diff two or more kernel config files
#

function usage()
{
	cat <<EOF
Usage: diff-kernel-configs [-h] CONFIGFILE CONFIGFILE [CONFIGFILE...]

Diff two or more kernel config files.

Optional arguments:
  -h, --help  Show this help text and exit.
EOF
}

function read_configfile()
{
	local array=${1} configfile=${2}
	local line config val

	while IFS= read -r line ; do
		case "${line}" in
			"# CONFIG_"*)
				config=${line#\# CONFIG_}
				config=${config%% *}
				val="n"
				;;
			"CONFIG_"*)
				config=${line#CONFIG_}
				config=${config%%=*}
				val=${line#*=}
				;;
			*)
				continue
				;;
		esac
		eval "${array}[${config}]=${val}"
	done < <(cat "${configfile}")
}

files=()

while [ $# -gt 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		-*)
			echo "Invalid argument: ${1}" >&2
			exit 2
			;;
		*)
			if ! [ -f "${1}" ] ; then
				echo "No such file: ${1}" >&2
				exit 1
			fi
			files+=("${1}")
			;;
	esac
	shift
done

if [ ${#files[@]} -lt 2 ] ; then
	usage
	exit 2
fi

# Read the configs files into associative arrays
for i in $(seq 0 $((${#files[@]} - 1))) ; do
	declare -A "CONFIGS_${i}"
	read_configfile "CONFIGS_${i}" "${files[${i}]}"
done

# Print a header line
printf "%-40s" "CONFIG"
for f in ${files[@]} ; do
	printf "%-40s" "${f::39}"
done
printf "\n"


# Print the config values
while IFS= read -r line ; do
	config=${line#*CONFIG_}
	config=${config%% *}
	config=${config%%=*}

	# first value (reference)
	ref_val=${CONFIGS_0[${config}]}

	printf "%-40s%-40s" "${config}" "${ref_val}"
	for i in $(seq 1 $((${#files[@]} - 1))) ; do
		var=CONFIGS_${i}[${config}]
		val="${!var:--}"
		if [ "${val}" = "${ref_val}" ] ; then
			color="\e[32m"  # green
		else
			color="\e[93m"  # orange
		fi
		printf "%-49s" "$(echo -e "${color}${val}\e[0m")"
	done
	printf "\n"

done < <(grep -P '^(# )?CONFIG_' "${files[0]}")
