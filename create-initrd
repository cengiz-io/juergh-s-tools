#!/bin/bash -eu
#
# Create (or extract) an initrd
#

function usage()
{
	cat <<EOF
Usage $(basename "${0}") [-e] [-h] [-i NAME] [-o NAME]

Create (or extract) an initrd.

Optional arguments:
  -e, --extract       Extract an initrd.
  -h, --help          Show this help text and exit
  -i, --in NAME
  -o, --out NAME
EOF
}

extract=0
in=
out=

while [ ${#} -gt 0 ] ; do
	case "${1}" in
		-e|--extract)
			extract=1
			;;
		-h|--help)
			usage
			exit
			;;
		-i|--in)
			shift
			in=$(realpath -m "${1}")
			;;
		-o|--out)
			shift
			out=$(realpath -m "${1}")
			;;
		*)
			echo "Invalid argument: ${1}" >&2
			exit 2
			;;
	esac
	shift
done

if [ -z "${in}" ] ; then
	usage
	exit 2
fi

if [ ${extract} -eq 0 ] ; then
	# Create an initrd
	if ! [ -d "${in}" ] ; then
		echo "No such directory: ${in}" >&2
		exit 1
	fi
	if [ -z "${out}" ] ; then
		out=$(realpath -m initrd.img)
	fi
	( cd "${in}" && find . | cpio -H newc -o | gzip -c > "${out}" )
	echo "Created initrd: ${out}"

else
	# Extract an initrd
	if ! [ -f "${in}" ] ; then
		echo "No such file: ${in}" >&2
		exit 1
	fi
	if [ -z "${out}" ] ; then
		out=$(realpath -m initrd.d)
	fi

	case "$(file "${in}")" in
		*"Zstandard compressed data"*) cmd=zstdcat ;;
		*)
			echo "Unsupported initrd compression" >&2
			exit 1
			;;
	esac

	mkdir -p "${out}"
	( cd "${out}" && "${cmd}" "${in}" | cpio --extract )
	echo "Extracted initrd: ${out}"

fi
