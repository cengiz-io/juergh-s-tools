#!/bin/bash -eu

function out()
{
	if [ "$(git rev-parse --abbrev-ref HEAD)" != "${CURR_BRANCH}" ] ; then
		git checkout "${CURR_BRANCH}"
	fi
}

function usage()
{
	cat <<EOF
Usage: $(basename "${0}") [-h] BUG

Create a pull-request set targeting different series.

Positional arguments:
  BUG         LP bug number.

Optional arguments:
  -h, --help  Show this help text and exit.
EOF
}

bug=

while [ ${#} -gt 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		[0-9]*)
			if [ -n "${bug}" ] ; then
				echo "Invalid argument: ${1}" >&2
				exit 2
			fi
			bug=${1}
			;;
		*)
			echo "Invalid argument: ${1}" >&2
			exit 2
			;;
	esac
	shift
done

if [ -z "${bug}" ] ; then
	usage
	exit 2
fi

CURR_BRANCH=$(git rev-parse --abbrev-ref HEAD)
trap out EXIT INT TERM HUP

rm -rf .outgoing
mkdir .outgoing

num=0
while IFS= read -r branch ; do
	num=$((num + 1))

	echo "-- Process ${branch}"
	git checkout "${branch}"

	# Create the PR
	pr_file=$(printf ".outgoing/%04d-%s.pr" "${num}" "${branch//\//-}")
	git-deb request-pull > "${pr_file}"

	s=${branch##*/}
	s=${s::1}
	S=${s^^}

	if [ ${num} -eq 1 ] ; then
		series=${S}
		# Create the cover letter
		sed -e '/^---/,$d' "${pr_file}" > .outgoing/0000-cover-letter.pr
	else
		series=${series}/${S}
	fi

	echo
done < <(git branch | grep "lp${bug}" | cut -c 3- | sort -r)

if [ ${num} -eq 0 ] ; then
	echo "No branches found for bug: ${bug}" >&2
	exit 1
fi

# Fix the series in the cover letter subject
sed -i -e "s,\[[A-Z]:,[${series}:," .outgoing/0000-cover-letter.pr
