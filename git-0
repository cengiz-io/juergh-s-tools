#!/bin/bash -eu
#
# git rebase helper
#

CMD=${0#*git-}

function usage()
{
	cat <<EOF
Usage: git-${CMD} [-h] [-n] COMMIT [COMMIT ..]

EOF

	case "${CMD}" in
		"<command>")
			echo "Valid commands: drop, edit, reword"
			;;
		drop)
			echo "Drop commits from the git log."
			;;
		edit)
			echo "Edit commits from the git log."
			;;
		reword)
			echo "Reword commit messages from the git log."
			;;
	esac
	
	cat <<EOF

Optional arguments:
  -h, --help     Show this help text and exit.
  -n, --dry-run
EOF
}

if [ "${CMD}" = "0" ] ; then
	CMD="<command>"
	usage
	exit 2
fi

dry_run=0

while [ ${#} -gt 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		-n|--dry-run)
			dry_run=1
			;;
		-*)
			usage
			exit 2
			;;
		*)
			break
			;;
	esac
	shift
done

if [ ${#} -eq 0 ] ; then
	usage
	exit 2
fi

script=$(mktemp)
# shellcheck disable=SC2064
trap "rm -f ${script}" EXIT INT TERM HUP

{
	echo "#!/bin/bash"
	for c in "${@}" ; do
		h=$(git rev-parse "${c}")
		echo "sed -ie 's/^pick ${h::8}.*/${CMD} ${h::8}/' \"\${1}\""
	done
} >"${script}"
chmod 755 "${script}"

if [ ${dry_run} -eq 1 ] ; then
	cat "${script}"
	echo "--Dry-run, exiting..."
else
	GIT_SEQUENCE_EDITOR="${script}" git rebase -i "${1}"~1
fi
