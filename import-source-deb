#!/bin/bash -eu
#
# Import a Debian source package into the current git repo
#

function out()
{
	local rc=${?}

	trap - EXIT INT TERM HUP

	rm -rf "${TMPD}"

	if [ ${rc} -ne 0 ] ; then
		echo "Script failed" >&2
	fi

	exit "${rc}"
}

function import_source_deb()
{
	local name=${1} version=${2}
	local tag dsc

	tag=${version//\~/_}
	if git tag | grep -q "^${tag}$" ; then
		if [ "${TAG}" -eq 0 ] ; then
			true
		elif [ "${FORCE}" -eq 1 ] ; then
			git tag -d "${tag}"
		else
			echo "Tag exists already: ${tag}" >&2
			exit 1
		fi
	fi

	pull-lp-source -d "${name}" "${version}"
	dsc="${name}_${version}.dsc"

	# Remove the temporary directory
	rm -rf "${TMPD}"

	# Extract the source package and update the tree
	dpkg-source --skip-patches -x "${dsc}" "${TMPD}"
	rsync -a --delete --exclude .git "${TMPD}"/ .

	git add .
	git commit -s -m "Import ${name} ${version}"

	if [ "${TAG}" -eq 1 ] ; then
		git tag "${tag}"
	fi
}

function usage()
{
	cat <<EOF
Usage: import-source-deb [-f] [-h] [-s NAME] [-t] VERSION [VERSION..]

Download a source package (or multiple) and import it into the current branch
of the current git repo.

Positional arguments:
  VERSION            Source package version.

Optional arguments:
  -f, --force        Force the import.
  -h, --help         Show this help text and exit.
  -s, --source NAME  Source package name. If not provided, retrieves the name
                     from debian/changelog.
  -t, --no-tag       Don't tag the import.
EOF
}

FORCE=0
versions=()
name=
TAG=1

while [ ${#} -gt 0 ] ; do
	case "${1}" in
		-f|--force)
			FORCE=1
			;;
		-h|--help)
			usage
			exit
			;;
		-s|--source)
			shift
			name=${1}
			;;
		-t|--no-tag)
			TAG=0
			;;
		*)
			versions=("${@}")
			break
			;;
	esac
	shift
done

if [ "${#versions[@]}" -eq 0 ] ; then
	usage
	exit 2
fi

if [ -z "${name}" ] ; then
	name=$(dpkg-parsechangelog -SSource)
fi

if [ -n "$(git status --porcelain)" ] ; then
    echo "Repo is not clean" >&2
    exit 1
fi

TMPD=$(mktemp -d)
trap out EXIT INT TERM HUP

for version in "${versions[@]}" ; do
	import_source_deb "${name}" "${version}"
done
