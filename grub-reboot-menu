#!/bin/bash -eu

function usage()
{
	cat <<EOF
Usage: $(basename "${0}") [-h] [-n] [-s]

Set GRUB boot entry.

Optional arguments:
  -h, --help   Show this help text and exit.
  -n, --next   Set the boot entry for the next boot only. This is the default.
  -s, --saved  Set the saved default boot entry.
EOF
}

if [ "$(id -u)" != "0" ] ; then
	echo "This script needs to be run as root" >&2
	exit 1
fi

saved=0

while [ ${#} -ne 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		-n|--next)
			true
			;;
		-s|--saved)
			saved=1
			;;
		*)
			echo "Invalid argument: ${1}" >&2
			exit 2
			;;
	esac
	shift
done

in_menuentry=0
submenus=()
entries=()

while IFS= read -r line ; do
	noblank=${line//[[:blank:]]/}
	case "${noblank}" in
		"menuentry'"*|"submenu'"*)
			title=${line#*\'}
			title=${title%%\'*}
			chain=$(printf "%s>" "${submenus[@]}")
			entry="${chain#>}${title}"
			entries+=("${entry}")
			;;&  # continue

		"menuentry'"*)
			in_menuentry=1
			;;

		"submenu'"*)
			submenus+=("${title}")
			;;

		"}")
			if [ ${in_menuentry} -eq 1 ] ; then
				in_menuentry=0
			elif [ ${#submenus[@]} -gt -0 ] ; then
				unset "submenus[-1]"
			fi
			;;
	esac
done < /boot/grub/grub.cfg

num_entries=${#entries[@]}

echo "Idx   Entry   Title"
echo "---------------------------------------------------------------------"
for i in $(seq 0 "$((num_entries - 1))") ; do
	entry=${entries[${i}]}
	printf "%3d   %s\n" "${i}" "${entry##*>}"
done

while true ; do
	echo -n "Choice: "
	read -r c
	if [ "${c}" -ge 0 ] 2>/dev/null && [ "${c}" -lt "${num_entries}" ] ; then
		break
	fi
done

entry=${entries[${c}]}
if [ ${saved} -eq 1 ] ; then
	grub-set-default "${entry}"
else
	grub-reboot "${entry}"
fi

echo
cat /boot/grub/grubenv
echo
