#!/bin/bash
#
# Setup script for create-vm which is run at first boot
#

function purge_packages()
{
	echo "-- Purging packages"

	apt-get --yes purge unattended-upgrades
}

function fix_grub()
{
	local serial

	if ! [ -e /etc/default/grub ] ; then
		return
	fi

	echo "-- Fixing grub"

	# Figure out the serial console
	for serial in hvc0 ttyAMA0 ttyS0 ; do
		if [ -e "/dev/${serial}" ] ; then
			break
		fi
	done

	# Configure grub
	test -d /etc/default/grub.d || mkdir /etc/default/grub.d
	cat <<__EOF__ > /etc/default/grub.d/99-create-vm.cfg
unset GRUB_HIDDEN_TIMEOUT GRUB_TIMEOUT_STYLE GRUB_FORCE_PARTUUID
GRUB_TIMEOUT=2
GRUB_CMDLINE_LINUX_DEFAULT="console=tty1 console=${serial}"
__EOF__

	# Reinstall and update grub
	grub-install /dev/vda
	update-grub
}

function setup_esm_repo()
{
	local keyid

	if ! [ -e "${HERE}"/esm-ppa.list ] ; then
		return
	fi

	echo "-- Setting up ESM repo"

	# Copy the ESM PPA list file
	cp "${HERE}"/esm-ppa.list /etc/apt/sources.list.d/

	# Download the PPA public keys
	while IFS= read -r keyid ; do
		apt-key adv --keyserver keyserver.ubuntu.com --recv-key "${keyid}"
	done < <(awk '/PPA public key/ { print $NF }' \
				 /etc/apt/sources.list.d/*.list)

	APT_UPDATE=1
}

function main()
{
	# Globals
	APT_UPDATE=0
	HERE=$(dirname "$(readlink -f "${0}")")

	echo "-- Sourcing setup-vm.config"
	# shellcheck disable=SC1090
	. "${HERE}"/setup-vm.config

	echo "-- Waiting for cloud-init to finish"
	while ! [ -e /var/lib/cloud/instance/boot-finished ] ; do
		sleep 1
	done

	purge_packages
	fix_grub
	setup_esm_repo

	if [ "${APT_UPDATE}" -eq 1 ] ; then
		apt-get --yes update
	fi

	if [ "${REBOOT}" -eq 1 ] ; then
		echo "-- Rebooting"
		reboot
	fi
}

# -----------------------------------------------------------------------------
# Main entry point

main 2>&1 | \
	awk '{ print strftime("%Y-%m-%d %H:%M:%S -"), $0 }' | \
	tee -a /var/log/setup-vm.log
