#!/bin/bash -eu
#
# Simple script for importing the source tree provided by a kernel SRPM into
# a git repository.
#

function pr_error()
{
	echo -e "\e[31m${*}\e[0m" 1>&2
}

function pr_info()
{
	echo -e "\e[33m${*}\e[0m"

}

function usage()
{
	cat <<EOF
Usage: import-kernel-srpm [-d] [-h] SRPM

Import a kernel source provided by <SRPM> into the current git repo.

Options:
  -c, --chroot CHROOT  Use chroot CHROOT for processing the SRPM.
  -d, --dry-run        Extract the SRPM but don't commit anything to the git
                       repo.
  -d, --help           Show this help text.
EOF
}

chroot=
dry_run=0
srpm=

while [ $# -gt 0 ] ; do
	case "${1}" in
		-c|--chroot)
			shift
			chroot=${1}
			;;
		-d|--dry-run)
			dry_run=1
			;;
		-h|--help)
			usage
			exit
			;;
		*)
			if [ -n "${srpm}" ] ; then
				pr_error "Unexpected argument: ${1}"
				exit 1
			fi
			if ! [ -e "${1}" ] ; then
				pr_error "No such file: ${1}"
				exit 1
			fi
			srpm=$(readlink -e "${1}")
			;;
	esac
	shift
done

if [ -z "${srpm}" ] ; then
	usage
	exit 2
fi

if ! [ -d .git ] ; then
	pr_error "Not in a git directory"
	exit 1
fi

gitd=$(readlink -e .)
mkdir -p ~/.rpmbuild/{BUILD,SOURCES,SPECS}
rpmbuildd=$(readlink -e ~/.rpmbuild)

# Parse the SRPM
name=$(rpm -qp --qf '%{NAME}\n' "${srpm}")
version=$(rpm -qp --qf '%{VERSION}\n' "${srpm}")
release=$(rpm -qp --qf '%{RELEASE}\n' "${srpm}")
tag=${version}-${release}

# Check if the kernel is already imported
if git log --format="%s" | grep -qFx "Import kernel ${tag}" ; then
	echo "Kernel ${tag} already imported"
	exit
fi

# Which schroot to use
if [ -z "${chroot}" ] ; then
	num=${release##*el}
	num=${num%%.*}
	num=${num%_*}
	chroot=centos${num}-x86_64
fi

pr_info "name:    ${name}"
pr_info "version: ${version}"
pr_info "release: ${release}"
pr_info "tag:     ${tag}"
pr_info "chroot:  ${chroot}"

# To silence chroot locale warnings
export LANG=
export LC_ALL=POSIX

# Clean the rpmbuild directories
rm -rf "${rpmbuildd}"/BUILD/* "${rpmbuildd}"/SOURCES/* "${rpmbuildd}"/SPECS/*

# Extract the SRPM
cd "${rpmbuildd}/SOURCES"
rpm2cpio "${srpm}" | cpio --extract --make-directories
mv ./*.spec ../SPECS/

# Apply the patches
cd "${rpmbuildd}/SPECS"
schroot -p -c "${chroot}" -- rpmbuild -bp "${name}.spec"

# The build directory
buildd=$(cd "${rpmbuildd}/BUILD" && find . -mindepth 2 -maxdepth 2 -type d)

# Clean the source
cd "${rpmbuildd}/BUILD/${buildd}"
schroot -p -c "${chroot}" -- make mrproper

if [ "${dry_run}" -eq 1 ] ; then
	pr_info "Dry run only, exiting..."
	exit
fi

# Copy the source
cd "${gitd}"
rsync -a --delete --cvs-exclude "${rpmbuildd}/BUILD/${buildd}/" .
cp "${rpmbuildd}/SPECS/${name}.spec" .

# Commit
git add .
git add -f ./*.spec
git commit -s -m "Import kernel ${tag}"
