#!/bin/bash -eu
#
# Retrigger RT tests
#

function usage()
{
	cat <<EOF
Usage: $(basename "${0}") -h RESULTS_URL [STATUS[,STATUS...]]

Retrigger RT tests.

Positional arguments:
  RESULTS_URL    URL of the results page.
  STATUS         Status of the tests to be retriggered. If not provided,
                 defaults to F (failed). Can be a comma-separated list of
                 multiple status values. Valid status values:
                   D: Deploy failure
                   F: Failed
                   I: Incomplete

Optional arguments:
  -d, --dry-run
  -h, --help     Show this help text and exit.
EOF
}

dry_run=0
results_url=
status=

while [ ${#} -gt 0 ] ; do
	case "${1}" in
		-d|--dry-run)
			dry_run=1
			;;
		-h|--help)
			usage
			exit
			;;
		*)
			if [ -z "${results_url}" ] ; then
				results_url=${1}
			elif [ -z "${status}" ] ; then
				status=${1}
			else
				usage
				exit 2
			fi
			;;
	esac
	shift
done

if [ -z "${results_url}" ] ; then
	usage
	exit 2
fi

if [ -z "${status}" ] ; then
	status="F"
fi

re_result="td class=\"result ("
for s in ${status//,/ } ; do
	case "${s^^}" in
		D) re_result="${re_result}noprov|" ;;
		F) re_result="${re_result}failed|" ;;
		I) re_result="${re_result}incomplete|" ;;
	esac
done
re_result="${re_result%|})\""

jenkins_url=http://10.246.72.9:8080

jenkins_cli=~/.cache/jenkins-cli.jar
if ! [ -e "${jenkins_cli}" ] ; then
	wget -O "${jenkins_cli}" "${jenkins_url}"/jnlpJars/jenkins-cli.jar
fi

base_url=${results_url#*://}
base_url=${base_url%%/*}
base_url=${results_url%%://*}://${base_url}

jjobs=()

while IFS= read -r line ; do
	href=${line##*href=\'}
	if [ "${href}" = "${line}" ] ; then
		continue
	fi
	href=${href%%\'*}

	# Determine the job name
	if [ "${href%/}" != "${href}" ] ; then
		job=${href%/}
		job=${job##*/}
	else
		job=$(curl -s "${base_url}"/"${href}" | grep ">Jenkins Job<" | \
				  tr '"' "'")
		job=${job##*/all/job/}
		job=${job%%/*}
	fi

	# Get the job build status
	tmpf=$(mktemp)
	curl -s "${jenkins_url}"/job/"${job}"/ > "${tmpf}"
	if grep -q 'pending.Already running' "${tmpf}" ; then
		status="\033[33mpending\033[0m"
	elif grep -q 'Estimated remaining time' "${tmpf}" ; then
		status="\033[36mbuilding\033[0m"
	else
		status="\033[32mready\033[0m"
		jjobs+=("${job}")
	fi
	rm -f "${tmpf}"

	echo -e "-- Found ${job} (${status})"

done < <(curl -s "${results_url}" | grep -E "${re_result}" -A1 | tr '"' "'")

if [ ${dry_run} -eq 1 ] ; then
	exit
fi

echo
for job in "${jjobs[@]}" ; do
	echo "-- Build ${job}"
	java -jar "${jenkins_cli}" -s "${jenkins_url}" build "${job}" || true
done
