#!/bin/bash -u
#
# Download debs from CBD
#

function usage()
{
	cat <<EOF
Usage: cbd-download [-h] [-o DIR] JOB_ID

Download Debian packages from a CBD job.

Positional arguments:
  JOB_ID            CBD job ID.

Optional arguments:
  -h, --help        Show this help text and exit.
  -o, --output DIR  Directory to download the Debian packages to. If not
                    provided, defaults to the current directory.
EOF
}

job_id=
output_dir=.

while [ $# -gt 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		-o|--output)
			shift
			output_dir=${1}
			;;
		-*)
			echo "Invalid argument: ${1}" >&2
			exit 2
			;;
		*)
			if [ -z "${job_id}" ] ; then
				job_id=${1}
			else
				echo "Invalid argument: ${1}" >&2
				exit 2
			fi
	esac
	shift
done

if [ -z "${job_id}" ] ; then
	usage
	exit 2
fi

tmpd=/tmp/${job_id%%/*}

mkdir -p "${tmpd}"
# shellcheck disable=SC2064
trap "rm -rf ${tmpd}" EXIT

# shellcheck disable=SC2029
ssh cbd tarball "${job_id}" | ( cd "${tmpd}" && tar -xzvf - )

# Copy the debs to the provided output directory
mkdir -p "${output_dir}"
find "${tmpd}" -name '*.deb' -print0 | xargs -0 -I{} mv '{}' "${output_dir}"

# Copy the build logs
if [ -e "${tmpd}"/build.log ] ; then
	cp "${tmpd}"/build.log "${output_dir}"
fi
for log in "${tmpd}"/*/build.log ; do
	if [ -e "${log}" ] ; then
		arch=${log%/build.log}
		arch=${arch##*/}
		cp "${log}" "${output_dir}"/build_"${arch}".log
	fi
done
