#!/bin/bash -eu
#
# List downstream commits
#

function out()
{
	local rc=${?}

	trap - EXIT

	if [ -n "${TMPF}" ] ; then
		rm -f "${TMPF}"
	fi

	if [ ${rc} -ne 0 ] ; then
		echo "Error: Script failed" >&2
	fi

	exit "${rc}"
}

function pr_yellow()
{
	echo -e "\033[93m${*}\033[0m"
}

function usage()
{
	cat <<EOF
Usage: $(basename "${0}") [-d] [-h] [-r] [-u] [BRANCH]

List the downstream commits on the current (or provided) branch.

Optional arguments:
  -c, --color   Color filtered commits rather than removing them from the
                output.
  -d, --debian  Filter debian commits.
  -f, --files   Show names of changed files.
  -h, --help    Show this help text and exit.
  -r, --revert  Filter reverted commits.
  -u, --ubuntu  Filter UBUNTU commits.
EOF
}

color=0
filter_debian=0
filter_ubuntu=0
filter_revert=0
files=0
branch=

while [ "${#}" -gt 0 ] ; do
	case "${1}" in
		-c|--color)
			color=1
			;;
		-d|--debian)
			filter_debian=1
			;;
		-f|--files)
			files=1
			;;
		-h|--help)
			usage
			exit
			;;
		-u|--ubuntu)
			filter_ubuntu=1
			;;
		-r|--revert)
			filter_revert=1
			;;
		*)
			if [ -n "${branch}" ] ; then
				echo "Error: Invalid argument: ${1}" >&2
				exit 2
			fi
			branch=${1}
			;;
	esac
	shift
done

if [ -z "${branch}" ] ; then
	branch=HEAD
fi

TMPF=
trap out EXIT

# Check if this is an Ubunut kernel
debian_env=$(git show "${branch}":debian/debian.env 2>/dev/null | \
				 grep DEBIAN || true)
if [ -z "${debian_env}" ] ; then
	is_ubuntu=0
	deriv=
else
	is_ubuntu=1
	deriv=-${debian_env#*debian.}
fi

# Determine the rev range to process
if [ "${is_ubuntu}" -eq 1 ] ; then
	subject="^[0-9a-f]{12} UBUNTU: Ubuntu-(unstable-)?\d+\.\d+\.\d+"
else
	subject="^[0-9a-f]{12} Linux \d+\.\d+"
fi
commit=$(git log --oneline "${branch}" | grep -m1 -P "${subject}")
if [ -z "${commit}" ] ; then
	echo "Error: Unable to determine rev range to process" >&2
	exit 1
fi
rev_range="${commit%% *}..${branch}"

# Create a temp file for filtering reverted commits
if [ ${filter_revert} -eq 1 ] ; then
	TMPF=$(mktemp)
	git log --no-merges --format='%h __MARK__%s__MARK__' "${rev_range}" > "${TMPF}"
fi

# Process the rev range
declare -A reverted
while IFS= read -r line ; do
	commit=${line%% *}
	subject=${line#* }

	# Filter debian commits
	if [ ${filter_debian} -eq 1 ] ; then
		if ! git log --format= --name-only "${commit}" -1 | \
				grep -qv '^debian' ; then
			if [ ${color} -eq 1 ] ; then
				pr_yellow "${line}"
			fi
			continue
		fi
	fi

	# Filter ubuntu commits
	if [ ${filter_ubuntu} -eq 1 ] ; then
		case "${subject}" in
			UBUNTU:\ Start\ new\ release|\
			UBUNTU:\ link-to-tracker*|\
			UBUNTU:\ Ubuntu"${deriv}"-[0-9]*\.[0-9]*\.[0-9]*|\
			UBUNTU:\ Ubuntu-unstable-[0-9]*\.[0-9]*\.[0-9]*|\
			UBUNTU:\ *Update\ to\ upstream*|\
			UBUNTU:\ \[[cC]onfig\]*|\
			UBUNTU:\ \[[pP]ackaging\]*|\
			UBUNTU:\ \[[dD]ebian\]*)
				if [ ${color} -eq 1 ] ; then
					pr_yellow "${line}"
				fi
				continue
				;;
		esac
	fi

	# Filter reverted commits
	if [ ${filter_revert} -eq 1 ] ; then
		if [ -n "${reverted[${commit}]:-}" ] ; then
			if [ ${color} -eq 1 ] ; then
				pr_yellow "${line}"
			fi
			continue
		fi

		no_revert=${subject#Revert \"}
		if [ "${no_revert}" != "${subject}" ] ; then
			no_revert=${no_revert%\"}
			match=$(sed -e "1,/^${commit}/d" "${TMPF}" | \
						grep -m1 -F "__MARK__${no_revert}__MARK__" | \
						sed 's, .*,,')
			if [ -n "${match}" ] ; then
				reverted[${match}]=1
				if [ ${color} -eq 1 ] ; then
					pr_yellow "${line}"
				fi
				continue
			fi
		fi
	fi

	echo "${line}"
	if [ ${files} -eq 1 ] ; then
		git log --format= --name-only "${line%% *}" -1 | sed 's/^/  F: /'
	fi
done < <(git log --no-merges --format='%h %s' "${rev_range}")
