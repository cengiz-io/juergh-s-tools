#!/bin/bash -eu
#
# Retrigger RT tests
#

function usage()
{
	cat <<EOF
Usage: $(basename "${0}") -h RESULTS_URL

Retrigger RT tests.

Optional arguments:
  -d, --dry-run
  -h, --help     Show this help text and exit.
EOF
}

dry_run=0
results_url=

while [ ${#} -gt 0 ] ; do
	case "${1}" in
		-d|--dry-run)
			dry_run=1
			;;
		-h|--help)
			usage
			exit
			;;
		*)
			if [ -n "${results_url}" ] ; then
				usage
				exit 2
			fi
			results_url=${1}
			;;
	esac
	shift
done

if [ -z "${results_url}" ] ; then
	usage
	exit 2
fi

results='td class="result (noprov|failed)"'

jenkins_url=http://10.246.72.9:8080

jenkins_cli=~/.cache/jenkins-cli.jar
if ! [ -e "${jenkins_cli}" ] ; then
	wget -O "${jenkins_cli}" "${jenkins_url}"/jnlpJars/jenkins-cli.jar
fi

base_url=${results_url#*://}
base_url=${base_url%%/*}
base_url=${results_url%%://*}://${base_url}

jjobs=()

while IFS= read -r line ; do
	href=${line##*href=\'}
	if [ "${href}" = "${line}" ] ; then
		continue
	fi
	href=${href%%\'*}

	# Get the job name from the URL
	job=$(curl -s "${base_url}"/"${href}" | grep ">Jenkins Job<" | \
			  tr '"' "'")
	job=${job##*/all/job/}
	job=${job%%/*}

	# Get the job build status
	tmpf=$(mktemp)
	curl -s "${jenkins_url}"/job/"${job}"/ > "${tmpf}"
	if grep -q 'pending.Already running' "${tmpf}" ; then
		status="\033[33mpending\033[0m"
	elif grep -q 'Estimated remaining time' "${tmpf}" ; then
		status="\033[36mbuilding\033[0m"
	else
		status="\033[32mready\033[0m"
		jjobs+=("${job}")
	fi
	rm -f "${tmpf}"

	echo -e "-- Found ${job} (${status})"

done < <(curl -s "${results_url}" | grep -E "${results}" -A1 | tr '"' "'")

if [ ${dry_run} -eq 1 ] ; then
	exit
fi

echo
for job in "${jjobs[@]}" ; do
	echo "-- Build ${job}"
	java -jar "${jenkins_cli}" -s "${jenkins_url}" build "${job}" || true
done
